<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.0.xsd">
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>/WEB-INF/application.properties</value>
        </property>
    </bean>                   
          
    <!-- secirity -->
        
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <security:logout />
    </security:http>
    
    <security:user-service id="userService">
        <security:user name="mluukkai" password="mluukkai" authorities="ROLE_ADMIN" />
        <security:user name="koe" password="koe" authorities="ROLE_OTHER" />
    </security:user-service>
    
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService"/>            
    </security:authentication-manager>                
        
    <!-- Data access-->                          
          
    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="${DATABASE_URL}"/>
    </bean>
       
    <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>                   
   
  
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>                               
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>                                        
    </bean>
       
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>              
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource"> <ref bean="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>           
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>    	    
        
        <property name="packagesToScan">
            <list>
                <value>nhlapp.domain</value>     
            </list>
        </property>        

    </bean>

    <!-- beans -->

    <bean id="playerDao" class="nhlapp.dao.HibernatePlayerDao" >
         <constructor-arg ref="sessionFactory"/>
    </bean>
    
    <bean id="s3Util" class="nhlapp.util.S3Util">
        <property name="s3AccessKey" value="${s3.accessKey}"/>
        <property name="s3SecretKey" value="${s3.secretkey}"/>
        <property name="s3Bucket" value="${s3.bucket}"/>
    </bean> 
    
    <bean id="playerDownloader" class="nhlapp.downloader.PlayerDownloader"/>
      
    <bean id="playerService" class="nhlapp.service.PlayerService" />   

</beans>
